init: q00
accept: finish
sigma: {1}
gamma: {_, 0, $, #, ., 1}

// 1. Before entering, we write the symbol # (before # we will write the divisors in the unary number system)
// 2. We write down the input number with slots and at the end we assign the symbol $ (example: # 111 -> # 1 1 1 $)
// 3. Before #, write the number 2 in unary notation.
// 4. Further from the numbers to the left and to the right, in turn,
//    subtract one by one. We do this by replacing each character 1 with 0 in turn in both numbers.
// 5. If in the number on the left all 1s have turned into 0 (it has been completely subtracted),
//    but in the number on the right it is not yet, then in the number on the right in the slot after
//    the last 0 we put the dot symbol (.). Update the number on the left (replace all 0s with 1s).
//    We return to step 4, but do not touch the already subtracted units from the right number,
//    subtract in the rest.
// 6. If in the number on the right all 1s have turned into 0, but in the number on the right there is not yet,
//    then the number on the left does not divide the number on the right.
//    Clear the number on the right (replace all 0s with 1s and remove the dots)
//    and the number on the left (replace all 0s with 1s).
//    Add one to the number on the left by assigning the character 1 to the left.
// 7. If in the number on the left all 1s have turned into 0, and in the number
//    on the right too (when passing through the number on the right we have reached $),
//    then from $ we go to the left, and if we see the dot symbol, then we reject the input
//    (it means that the input is divided into the number to the left of the # and it's not himself).
//    If we do not meet the dot symbol and reach #, then we accept the input: the number at the input is prime
//    (we went through all the divisors and reached the number itself).

q00,1
q01,1,<

q01,_
q0,#,>

q0,1
q1,1,>

q1,1
q2,_,>

q2,1
q2,1,>

q2,_
q3,1,<

q3,1
q3,1,<

q3,_
q0,_,>

q1,_
q3.9,$,<

q3.9,1
q3.9,1,<

q3.9,#
error,#,>

q3.9,_
q4,_,<

q4,1
q4,1,<

q4,_
q4,_,<

q4,#
q5,#,<

q5,_
q6,1,<

q6,_
q7,1,>

q7,1
C,1,>

C,#
C,#,>

C,0
C,0,>

C,_
C,_,>

C,.
C,.,>

C,1
q8,0,<

q8,#
q8,#,<

q8,0
q8,0,<

q8,_
q8,_,<

q8,.
q8,.,<

q8,1
q9,0,<

q9,1
C,1,>

q9,_
q10,_,>

q10,0
q10,1,>

q10,#
q11,#,>

q11,0
q11,0,>

q11,_
q11,_,>

q11,.
q11,.,>

q11,1
q12,1,<

q12,_
q13,.,<

q13,0
q13,0,<

q13,_
q13,_,<

q13,.
q13,.,<

q13,#
C,#,>

q11,$
qend1,$,<

qend1,0
qend1,0,<

qend1,_
qend1,_,<

qend1,#
finish,#,>

qend1,.
error,.,>

C,$
q14,$,<

q14,0
q14,1,<

q14,_
q14,_,<

q14,.
q14,_,<

q14,#
q15,#,<

q15,0
q15,1,<

q15,1
q15,1,<

q15,_
q16,1,>

q16,1
q16,1,>

q16,#
C,#,>